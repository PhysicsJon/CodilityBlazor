@page "/"
@using System.Text.RegularExpressions;

<div class="row justify-content-center">
    <div class="d-block">
        <h1>Login-ish</h1>
    </div>
</div>
<div class="row justify-content-center">
    <div class="alert @ClassNames">
        @alertText
    </div>
</div>
<div class="row justify-content-center">
    <form @onsubmit="OnSubmit" class="needs-validation" novalidate>
        <div class="form-row">
            <div class="form-group row">
                <label for="email" class="col-3 col-form-label">Email</label>
                <div class="col-9">
                    <input class="form-control" type="text" id="email" @bind-value="Email" required />
                    <div class="invalid-feedback">
                        Invalid username/password
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group row">
                <label for="password" class="col-3 col-form-label">Password</label>
                <div class="col-9">
                    <input class="form-control" id="password" @bind-value="Password" type="password" required />
                    <div class="invalid-feedback">
                        Invalid username/password
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group row">
                <button type="submit" class="btn-primary rounded btn-lg">Log In <span class="oi oi-chevron-right" aria-hidden="true"></span></button>
            </div>
        </div>
    </form>
</div>

@code{
    string ClassNames = "d-none";
    string alertText = "";

    string Email;
    string Password;

    void OnSubmit()
    {
        if (string.IsNullOrEmpty(Email) || string.IsNullOrEmpty(Password))
        {
            ClassNames = "alert-danger";
            alertText = "Please provide both username and password";
            Password = string.Empty;
            return;
        }

        if (!Regex.IsMatch(Email,
                @"^(?("")("".+?(?<!\\)""@)|(([0-9a-z]((\.(?!\.))|[-!#\$%&'\*\+/=\?\^`\{\}\|~\w])*)(?<=[0-9a-z])@))" +
                @"(?(\[)(\[(\d{1,3}\.){3}\d{1,3}\])|(([0-9a-z][-0-9a-z]*[0-9a-z]*\.)+[a-z0-9][\-a-z0-9]{0,22}[a-z0-9]))$",
                RegexOptions.IgnoreCase, TimeSpan.FromMilliseconds(250)))
        {
            ClassNames = "alert-danger";
            alertText = "Email is not in a valid format";
            Password = string.Empty;
            return;
        }

        if (Email != "interviewee@bjss.com" || Password != "Test123")
        {
            ClassNames = "alert-danger";
            alertText = "Invalid username/password";
            Password = string.Empty;
            return;
        }

        ClassNames = "alert-success";
        alertText = "Welcome to BJSS";
    }
}