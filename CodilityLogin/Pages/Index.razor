@page "/"
@using Interfaces;
@using Models;
@inject ILoginService  _loginService;

<div class="row justify-content-center">
    <div class="d-block">
        <h1>Login-ish</h1>
    </div>
</div>
<div class="row justify-content-center">
    <div class="alert @ClassNames">
        @alertText
    </div>
</div>
<div class="row justify-content-center">
    <form @onsubmit="OnSubmit" novalidate>        
        <div class="form-group row">
            <label for="email" class="col-4">Email</label>                
            <input class="form-control col-8" type="text" id="email" @bind-value="user.Email" required />                
        </div>                
        <div class="form-group row">
            <label for="password" class="col-4">Password</label>                
            <input class="form-control col-8" id="password" @bind-value="user.Password" type="password" required />
                
        </div>
        <div class="form-group row justify-content-center">
            <button type="submit" class="btn-primary rounded btn-lg">Log In <span class="oi oi-chevron-right" aria-hidden="true"></span></button>
        </div>
        
    </form>
</div>

@code{
    User user = new User();
    string ClassNames = "d-none";
    string alertText = "";

    void OnSubmit()
    {
        var result = _loginService.CheckCredentials(user);

        ClassNames = result.ClassNames;
        alertText = result.AlertText;

        if (alertText.Contains("danger")) user.Password = string.Empty;
    }
}