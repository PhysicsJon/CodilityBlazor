@page "/"
@using Interfaces;
@using Models;
@inject ILoginService  _loginService;

<div class="row justify-content-center">
    <div class="d-block">
        <h1>Login-ish</h1>
    </div>
</div>
<div class="row justify-content-center">
    <div class="alert @ClassNames">
        @alertText
    </div>
</div>
<div class="row justify-content-center">
    <form @onsubmit="OnSubmit" novalidate>
        <div class="form-row">
            <div class="form-group row">
                <label for="email" class="col-3 col-form-label">Email</label>
                <div class="col-9">
                    <input class="form-control" type="text" id="email" @bind-value="user.Email" required />
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group row">
                <label for="password" class="col-3 col-form-label">Password</label>
                <div class="col-9">
                    <input class="form-control" id="password" @bind-value="user.Password" type="password" required />
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group row">
                <button type="submit" class="btn-primary rounded btn-lg">Log In <span class="oi oi-chevron-right" aria-hidden="true"></span></button>
            </div>
        </div>
    </form>
</div>

@code{
    User user = new User();
    string ClassNames = "d-none";
    string alertText = "";

    void OnSubmit()
    {
        var result = _loginService.CheckCredentials(user);

        ClassNames = result.ClassNames;
        alertText = result.AlertText;

        if (alertText.Contains("danger")) user.Password = string.Empty;
    }
}